from sklearn.linear_model import ElasticNetCV
from pandas import DataFrame, ExcelFile
import pandas as pd
from sklearn.model_selection import train_test_split,GridSearchCV,cross_val_score,KFold,LeaveOneOut
from sklearn.metrics import mean_squared_error, r2_score,mean_absolute_error
from sklearn.preprocessing import MinMaxScaler,StandardScaler,Normalizer
from sklearn.linear_model import SGDRegressor
import numpy as np
import os

#打印当前工作目录
print("当前目录：",os.getcwd())
#切换到指定目录
os.chdir('E:\data')
#打印切换后的工作目录
print("切换后的工作目录：",os.getcwd())
"""
   线性回归:岭回归
   :return:
"""
#1.获取数据
data = pd.read_excel(r'E:\data\grain composition.xlsx')
X = data.iloc[:,1:7]
Y = data.iloc[:,7:8]
#print(X)
#print(Y)

# 2.数据集划分
x_train, x_test, y_train, y_test = train_test_split(X,Y,test_size=0.3,random_state=None)

# 3.特征工程-标准化
transfer = StandardScaler()
x_train = transfer.fit_transform(x_train)
x_test = transfer.fit_transform(x_test)

# 4.机器学习-线性回归(ElasticNet)
estimator = ElasticNetCV(alphas=[10,1.0,0.1,0.05,0.01,0.005,0.001,0.0005,0.0001,0.0005,0.00001],cv=10)
estimator.fit(x_train, y_train)

# 5.模型评估
# 5.1 获取系数等值
y_predict = estimator.predict(x_test)
print("预测值为:\n", y_predict)
print("模型中的系数为:\n", estimator.coef_)
print("模型中的偏置为:\n", estimator.intercept_)
net = estimator.score(x_test,y_test)
print("准确率是：\n",net)
#查看最优alpha
print("最优alpha是：\n",estimator.alpha_)

# 5.2 评价
# 均方误差
MSE = mean_squared_error(y_test, y_predict)
print("均方误差为:\n", MSE)
#平均绝对误差
MAE = mean_absolute_error(y_test, y_predict)
print("平均绝对误差为:\n", MAE)

#均方根误差
RMSE_test = MSE**0.5
print("均方根误差为:\n", RMSE_test)
#决定系数
R2 = r2_score(y_test,y_predict)
print("决定系数为:\n", R2)
